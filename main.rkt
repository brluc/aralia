;;; main.rkt
;;;
;;; User interface. Use this module to debug
;;; and hack around with herbium.

#lang racket

(require "alpha-sort.rkt"
         "herbium-gen-latex.rkt")

(provide (all-defined-out))

(define herbium-database-filename
  (make-parameter "herbium.rkt"))

(define (read-herbium)
  (call-with-input-file (herbium-database-filename) read))


;; Test congruence of herbium rows.
;; Generate some stats on chapter contents.


;; Final product.
(define (write-to-tex-file body)
  (call-with-output-file "xherbiumx.tex" #:exists 'replace
    (lambda (out)
      (displayln "%% xherbiumx.tex\n%%" out) 
      (displayln "%% This file is generated by Racket:\n%%" out)
      (displayln "%%    racket main.rkt\n%%" out)
      (displayln "%% the x...x means this is Racket-generated\n%%\n" out)
      (displayln body out))))

(define (build-herbium)
  (write-to-tex-file
   (make-body
    (read-herbium))))



;;; Experiments.

(define herbium (read-herbium))

(define (find-latin-pairs)
  (filter
   (lambda (row)
     (match row
       ((list _ _ _ latin _ _ )
        (list? latin))))
   herbium))

